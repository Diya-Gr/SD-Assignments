//1
CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Age INT CHECK (Age BETWEEN 18 AND 25),
    Grade DECIMAL(3, 1) CHECK (Grade BETWEEN 0.0 AND 10.0)
);

INSERT INTO Students (StudentID, Name, Age, Grade) VALUES (1, 'Diya', 17, 8.5);
INSERT INTO Students (StudentID, Name, Age, Grade) VALUES (2, 'Ayaan', 20, 12.0);





//2
CREATE TABLE Courses (
    CourseID INT PRIMARY KEY,
    CourseName VARCHAR(100),
    Credits INT NOT NULL
);
INSERT INTO Courses (CourseName, Credits) VALUES ('Dbms', 4);




//3
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ProductID INT,
    OrderQuantity INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
INSERT INTO Orders (OrderID, ProductID, OrderQuantity) VALUES (1, 999, 5);
INSERT INTO Products (ProductID, ProductName) VALUES (1, 'Laptop'), (2, 'Phone');

INSERT INTO Orders (OrderID, ProductID, OrderQuantity) VALUES (1, 1, 3), (2, 2, 2);




//4
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Email VARCHAR(100) UNIQUE,
    Name VARCHAR(50)
);
INSERT INTO Employees (EmployeeID, Email, Name) VALUES (1, 'abc@example.com', 'abc');
INSERT INTO Employees (EmployeeID, Email, Name) VALUES (2, 'xyz@example.com', 'xyz');
INSERT INTO Employees (EmployeeID, Name) VALUES (3, 'diya');




//5
CREATE TABLE Accounts (
    AccountID INT PRIMARY KEY,
    MobileNumber VARCHAR(10) CHECK (LENGTH(MobileNumber) = 10),
    Balance DECIMAL(10, 2) CHECK (Balance >= 0)
);

CREATE TABLE Transactions (
    TransactionID INT PRIMARY KEY,
    AccountID INT,
    TransactionAmount DECIMAL(10, 2) CHECK (TransactionAmount <> 0),
    FOREIGN KEY (AccountID) REFERENCES Accounts(AccountID)
);
INSERT INTO Transactions (TransactionID, AccountID, TransactionAmount) VALUES (1, 999, 500.00);
INSERT INTO Accounts (AccountID, MobileNumber, Balance) VALUES (1, '1234567890', 1000.00);

INSERT INTO Transactions (TransactionID, AccountID, TransactionAmount) VALUES (1, 1, 500.00);

